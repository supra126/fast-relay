# ===== Basic Configuration =====
PORT=8080
HOST=0.0.0.0

# Node environment (development | production)
# In production mode, logger uses JSON format for better performance
NODE_ENV=development

# Request body size limit in bytes (default: 10485760 = 10MB)
# Adjust based on your needs. Example: 1048576 for 1MB
BODY_LIMIT=10485760

# ===== Security Configuration (Optional) =====

# API Keys authentication (optional)
# If set, all requests (except /health) will require authentication
# Supports single or multiple keys (comma-separated)
# Recommended: Use strong random keys with at least 16 characters
# Generate with: openssl rand -base64 32
#
# Examples:
#   Single key:    API_KEYS=your-secure-api-key-here
#   Multiple keys: API_KEYS=client1-key,client2-key,admin-key
#
# API_KEYS=

# Domain whitelist for proxy targets (optional, recommended for production)
# Prevents SSRF attacks by restricting allowed target domains
# Supports wildcards: *.example.com matches api.example.com, app.example.com, etc.
# Examples:
#   ALLOWED_DOMAINS=api.example.com,webhooks.example.com
#   ALLOWED_DOMAINS=*.example.com,*.trusted-service.com
# ALLOWED_DOMAINS=

# Authentication Methods:
# 1. Authorization: Bearer <key> (recommended)
# 2. X-API-Key: <key> header
# 3. ?api_key=<key> query parameter (not recommended)

# Security Features:
# - SSRF Protection: Blocks private IPs, localhost, cloud metadata services
# - Token Masking: GitHub tokens masked in logs (ghp_...1234)
# - Environment Validation: Checks for weak credentials on startup

# ===== Performance & Security =====

# CORS configuration (optional)
# Comma-separated list of allowed origins
# Examples:
#   CORS_ORIGINS=https://app.example.com
#   CORS_ORIGINS=https://app.example.com,https://admin.example.com
#   CORS_ORIGINS=http://localhost:3000,http://localhost:5173
# If not set, CORS is disabled
# CORS_ORIGINS=

# Rate limiting (default: 100 requests per minute)
# Protects your proxy from abuse and DDoS attacks
# max: Maximum number of requests per time window
# window: Time window (supports: 1 minute, 1 hour, 1 day, etc.)
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=1 minute

# ===== GitHub Gist Configuration (choose one) =====

# Option 1: Use Raw URL (Public Gist)
# Go to https://gist.github.com/ to create Gist, click "Raw" to get URL
# GIST_URL=https://gist.githubusercontent.com/username/gist-id/raw/routes.json

# Option 2: Use GitHub API (Private Gist)
# Need to create Personal Access Token (scope: gist)
# https://github.com/settings/tokens
# GIST_ID=your-gist-id
# GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Option 3: Local configuration file
# If not set, will use local routes.json file

# ===== Gist Sync Settings =====

# Sync interval (seconds), default 300 seconds (5 minutes)
# Set to 0 to disable auto-sync (only load once on startup)
# Recommended range: 60-3600 seconds
GIST_SYNC_INTERVAL=300

# Auto-restart (restart app when config changes detected), enabled by default
# Set to false to only log, no auto-restart
GIST_AUTO_RESTART=true

# Gist fetch timeout in milliseconds (default: 10000 = 10 seconds)
# Maximum time to wait for Gist API response before timing out
# Recommended range: 5000-30000 (5-30 seconds)
GIST_FETCH_TIMEOUT=10000

# ===== Legacy Compatibility (not recommended) =====

# Use environment variables to define routes (not recommended, use routes.json or Gist instead)
# PROXY_ROUTES=/api/v1/*->https://api.example.com/v1,/webhook->https://webhooks.example.com/hooks

# Simple single target URL (not recommended)
# TARGET_URLS=https://api.example.com
